@model ExpenseTracker.Models.ExpenseViewModel
@using System.Security.Claims;

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["InfoMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="budget-container mt-4">
@foreach (var budget in Model.Budgets)
{
    <div class="budget-section">
        <h2 class='mb-4'>@budget.Title</h2>
        @{
            var totalExpenses = Model.Expenses.Where(e => e.BudgetId == budget.Id).Sum(e => e.Amount);
            var fundsRemaining = budget.Amount - totalExpenses;
            var percentageUsed = (totalExpenses / budget.Amount) * 100;
        }
        @if (percentageUsed > 80)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                Warning: You exceeded 80% of your budget!
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <p style="display:inline-block;">Start Date: @budget.StartDate.ToShortDateString()</p>
        <p style="display:inline-block; float:right;">End Date: @budget.EndDate.ToShortDateString()</p>
        <p style="text-align: center;">Funds remaining: @fundsRemaining.ToString("C")</p>
        <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: @(percentageUsed.ToString(System.Globalization.CultureInfo.InvariantCulture))%" aria-valuenow="@(percentageUsed.ToString(System.Globalization.CultureInfo.InvariantCulture))" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <div class="budget-actions">
            <button class="btn btn-success btn-sm btn-show-add-expense" data-budget-id="@budget.Id" onclick="showAddExpenseForm(this)">Add Expense</button>
            <form asp-action="DeleteBudget" asp-route-id="@budget.Id" method="post" style="display:inline-block;">
                <button type="submit" class="btn btn-danger btn-sm">Delete Budget</button>
            </form>
            <button class="btn btn-warning btn-sm btn-edit-budget" data-budget-id="@budget.Id" onclick="showEditBudgetForm(this)">Edit Budget</button>
            <button class="btn btn-info btn-sm" onclick="exportBudgetToCsv(@budget.Id)">
                <i class="fas fa-file-csv"></i> Export to CSV
            </button>
            <form asp-action="GenerateReport" method="post" target="_blank" style="display:inline;">
                <input type="hidden" name="BudgetId" value="@budget.Id" />
                <button type="submit" class="btn btn-primary btn-sm">Generate Report</button>
            </form>
        </div>
        <div class="add-expense-form" data-budget-id="@budget.Id" style="display:none;">
            <form asp-action="AddExpenseToBudget" method="post">
                <div class="form-group mt-2">
                    <label for="Amount">Amount</label>
                    <input type="text" name="Amount" class="form-control" />
                </div>
                <div class="form-group mt-2">
                    <label for="Date">Date</label>
                    <input type="date" name="Date" class="form-control" />
                </div>
                <div class="form-group mt-2">
                    <label for="CategoryId">Category</label>
                    <select name="CategoryId" class="form-control">
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.Value">@category.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group mt-2">
                    <label for="Description">Description</label>
                    <input type="text" name="Description" class="form-control" />
                </div>
                <input type="hidden" name="BudgetId" value="@budget.Id" />
                <button type="submit" class="btn btn-primary mt-3">Add Expense</button>
                <button type="button" class="btn btn-secondary btn-cancel-add-expense mt-3" onclick="cancelAddExpenseForm(this)">Cancel</button>
            </form>
        </div>
        <div class="edit-budget-form" data-budget-id="@budget.Id" style="display:none;">
            <form asp-action="EditBudget" asp-route-id="@budget.Id" method="post" class="form-inline mt-4">
                <div class="form-group mt-2">
                    <label for="Title">Title</label>
                    <input type="text" name="Title" class="form-control" value="@budget.Title" />
                </div>
                <div class="form-group mt-2">
                    <label for="Amount">Amount</label>
                    <input type="text" name="Amount" class="form-control" value="@budget.Amount" />
                </div>
                <div class="form-group mt-2">
                    <label for="StartDate">Start Date</label>
                    <input type="date" name="StartDate" class="form-control" value="@budget.StartDate.ToString("yyyy-MM-dd")" />
                </div>
                <div class="form-group mt-2">
                    <label for="EndDate">End Date</label>
                    <input type="date" name="EndDate" class="form-control" value="@budget.EndDate.ToString("yyyy-MM-dd")" />
                </div>
                <input type="hidden" name="UserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
                <button type="submit" class="btn btn-primary mt-3">Save</button>
                <button type="button" class="btn btn-secondary btn-cancel-edit-budget mt-3" onclick="cancelEditBudgetForm(this)">Cancel</button>
            </form>
        </div>
        @{
            var budgetExpenses = Model.Expenses.Where(e => e.BudgetId == budget.Id).ToList();
        }
        @if (budgetExpenses.Any())
        {
            <table class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th class="text-center"><a href="#" class="sort-header" data-sort-by="amount">Amount</a></th>
                        <th class="text-center"><a href="#" class="sort-header" data-sort-by="date">Date</a></th>
                        <th class="text-center"><a href="#" class="sort-header" data-sort-by="category">Category</a></th>
                        <th class="text-center"><a href="#" class="sort-header" data-sort-by="description">Description</a></th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var expense in budgetExpenses)
                    {
                        <tr>
                            <td class="text-center">
                                <span class="expense-amount">@expense.Amount</span>
                                <input type="text" class="form-control expense-edit-amount" value="@expense.Amount" style="display:none;" />
                            </td>
                            <td class="text-center">
                                <span class="expense-date">@expense.Date.ToShortDateString()</span>
                                <input type="date" class="form-control expense-edit-date" value="@expense.Date.ToString("yyyy-MM-dd")" style="display:none;" />
                            </td>
                            <td class="text-center">
                                <span class="expense-category">@expense.Category.Name</span>
                                <select class="form-control expense-edit-category" style="display:none;">
                                    @foreach (var category in ViewBag.Categories)
                                    {
                                        var selected = category.Value == expense.Category.Id.ToString() ? "selected" : "";
                                        <option value="@category.Value" selected="@selected">@category.Text</option>
                                    }
                                </select>
                            </td>
                            <td class="text-center">
                                <span class="expense-description">@expense.Description</span>
                                <input type="text" class="form-control expense-edit-description" value="@expense.Description" style="display:none;" />
                            </td>
                            <td class="text-center">
                                <button class="btn btn-warning btn-sm btn-edit" onclick="editExpense(this)">Edit</button>
                                <form asp-action="DeleteExpense" asp-route-id="@expense.Id" method="post" style="display:inline;">
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </form>
                                <form asp-action="EditExpense" asp-route-id="@expense.Id" method="post" class="form-inline-edit" style="display:none;">
                                    <input type="hidden" name="Id" value="@expense.Id" />
                                    <input type="hidden" name="Amount" class="form-control expense-edit-amount-input" />
                                    <input type="hidden" name="Date" class="form-control expense-edit-date-input" />
                                    <input type="hidden" name="CategoryId" class="form-control expense-edit-category-input" />
                                    <input type="hidden" name="Description" class="form-control expense-edit-description-input" />
                                    <input type="hidden" name="BudgetId" value="@expense.BudgetId" />
                                    <button type="submit" class="btn btn-primary btn-sm">Save</button>
                                    <button type="button" class="btn btn-secondary btn-sm btn-cancel" onclick="cancelEditExpense(this)">Cancel</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        <form id="export-csv-form-@budget.Id" asp-action="ExportBudgetToCsv" method="post" style="display:none;">
            <input type="hidden" name="BudgetId" value="@budget.Id" />
        </form>
    </div>
}

    <div id="add-budget-form" class="budget-section" style="display:none;">
        <h3>Add New Budget</h3>
        <form asp-action="CreateBudget" method="post">
            <div class="form-group mt-2">
                <label for="Title">Title</label>
                <input type="text" name="Title" class="form-control" />
            </div>
            <div class="form-group mt-2">
                <label for="Amount">Amount</label>
                <input type="text" name="Amount" class="form-control" />
            </div>
            <div class="form-group mt-2">
                <label for="StartDate">Start Date</label>
                <input type="date" name="StartDate" class="form-control" />
            </div>
            <div class="form-group mt-2">
                <label for="EndDate">End Date</label>
                <input type="date" name="EndDate" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary mt-3">Add Budget</button>
            <button type="button" id="btn-cancel-add-budget" class="btn btn-secondary mt-3" onclick="cancelAddBudgetForm()">Cancel</button>
        </form>
    </div>
</div>

<div id="import-csv-form" class="budget-section" style="display:none;">
    <h3>Import Budget from CSV</h3>
    <form asp-action="ImportBudgetFromCsv" method="post" enctype="multipart/form-data">
        <div class="form-group mt-4 mb-4">
            <input type="file" name="csvFile" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary mt-3">Import</button>
        <button type="button" id="btn-cancel-import-csv" class="btn btn-secondary mt-3" onclick="cancelImportCsvForm()">Cancel</button>
    </form>
</div>

<button id="btn-show-add-budget" class="btn btn-success mt-3" onclick="showAddBudgetForm()">Add New Budget</button>
<button id="btn-show-import-csv" class="btn btn-info mt-3" onclick="showImportCsvForm()">Import from CSV</button>

<form id="export-csv-form" asp-action="ExportBudgetsToCsv" method="post" style="display:none;">
    <input type="hidden" name="UserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
</form>

@section Scripts {
    <script>
        function showAddExpenseForm(button) {
            const budgetId = button.getAttribute('data-budget-id');
            document.querySelector(`.add-expense-form[data-budget-id="${budgetId}"]`).style.display = 'block';
            button.style.display = 'none';
        }

        function cancelAddExpenseForm(button) {
            const form = button.closest('.add-expense-form');
            form.style.display = 'none';
            document.querySelector(`.btn-show-add-expense[data-budget-id="${form.getAttribute('data-budget-id')}"]`).style.display = 'inline-block';
        }

        function showAddBudgetForm() {
            document.getElementById('add-budget-form').style.display = 'inline-block';
            document.getElementById('btn-show-add-budget').style.display = 'none';
            document.getElementById('btn-show-import-csv').style.display = 'none';
        }

        function cancelAddBudgetForm() {
            document.getElementById('add-budget-form').style.display = 'none';
            document.getElementById('btn-show-add-budget').style.display = 'inline-block';
            document.getElementById('btn-show-import-csv').style.display = 'inline-block';
        }

        function editExpense(button) {
            const row = button.closest('tr');
            row.querySelector('.expense-amount').style.display = 'none';
            row.querySelector('.expense-edit-amount').style.display = 'block';
            row.querySelector('.expense-date').style.display = 'none';
            row.querySelector('.expense-edit-date').style.display = 'block';
            row.querySelector('.expense-category').style.display = 'none';
            row.querySelector('.expense-edit-category').style.display = 'block';
            row.querySelector('.expense-description').style.display = 'none';
            row.querySelector('.expense-edit-description').style.display = 'block';
            row.querySelector('.form-inline-edit').style.display = 'inline';
            button.style.display = 'none';
        }

        function cancelEditExpense(button) {
            const row = button.closest('tr');
            row.querySelector('.expense-amount').style.display = 'block';
            row.querySelector('.expense-edit-amount').style.display = 'none';
            row.querySelector('.expense-date').style.display = 'block';
            row.querySelector('.expense-edit-date').style.display = 'none';
            row.querySelector('.expense-category').style.display = 'block';
            row.querySelector('.expense-edit-category').style.display = 'none';
            row.querySelector('.expense-description').style.display = 'block';
            row.querySelector('.expense-edit-description').style.display = 'none';
            row.querySelector('.form-inline-edit').style.display = 'none';
            row.querySelector('.btn-edit').style.display = 'inline';
        }

        function showEditBudgetForm(button) {
            const budgetId = button.getAttribute('data-budget-id');
            document.querySelector(`.edit-budget-form[data-budget-id="${budgetId}"]`).style.display = 'block';
            button.style.display = 'none';
        }

        function cancelEditBudgetForm(button) {
            const form = button.closest('.edit-budget-form');
            form.style.display = 'none';
            document.querySelector(`.btn-edit-budget[data-budget-id="${form.getAttribute('data-budget-id')}"]`).style.display = 'inline-block';
        }

        function exportBudgetToCsv(budgetId) {
            document.getElementById(`export-csv-form-${budgetId}`).submit();
        }

        function showImportCsvForm() {
            document.getElementById('import-csv-form').style.display = 'block';
            document.getElementById('btn-show-import-csv').style.display = 'none';
            document.getElementById('btn-show-add-budget').style.display = 'none';
        }

        function cancelImportCsvForm() {
            document.getElementById('import-csv-form').style.display = 'none';
            document.getElementById('btn-show-import-csv').style.display = 'inline-block';
            document.getElementById('btn-show-add-budget').style.display = 'inline-block';
        }

        document.querySelectorAll('.form-inline-edit').forEach(form => {
            form.addEventListener('submit', function() {
                const row = this.closest('tr');
                const amountInput = row.querySelector('.expense-edit-amount');
                const dateInput = row.querySelector('.expense-edit-date');
                const categoryInput = row.querySelector('.expense-edit-category');
                const descriptionInput = row.querySelector('.expense-edit-description');
                this.querySelector('.expense-edit-amount-input').value = amountInput.value;
                this.querySelector('.expense-edit-date-input').value = dateInput.value;
                this.querySelector('.expense-edit-category-input').value = categoryInput.value;
                this.querySelector('.expense-edit-description-input').value = descriptionInput.value;
            });
        });

        document.querySelectorAll('.sort-header').forEach(header => {
            header.addEventListener('click', function(event) {
                event.preventDefault();
                const sortBy = this.getAttribute('data-sort-by');
                const rows = Array.from(document.querySelectorAll('tbody tr'));
                rows.sort((a, b) => {
                    const aValue = a.querySelector(`.expense-${sortBy}`).innerText;
                    const bValue = b.querySelector(`.expense-${sortBy}`).innerText;
                    if (sortBy === 'amount') {
                        return parseFloat(aValue) - parseFloat(bValue);
                    } else if (sortBy === 'date') {
                        return new Date(aValue) - new Date(bValue);
                    } else {
                        return aValue.localeCompare(bValue);
                    }
                });
                const tbody = document.querySelector('tbody');
                tbody.innerHTML = '';
                rows.forEach(row => tbody.appendChild(row));
            });
        });
    </script>
}

<style>
    .budget-container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: flex-start;
    }
    .budget-section {
        margin-bottom: 20px;
        padding: 1.5rem;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        width: 49%;
    }
    .budget-section table{
        margin-top: 2rem;
    }
    .light-mode .budget-section {
        background-color: #f9f9f9;
    }
    .dark-mode .budget-section {
        background-color: #333333;
    }
    .dark-mode .table td {
        color: #f9f9f9;
    }
    .thead-dark th {
        background-color: #343a40;
        color: #fff;
    }
    .thead-dark th a {
        text-decoration: none;
        color: #fff;
    }
    .thead-dark th a:hover {
        color: #ccc;
    }
    .progress {
        height: 2rem;
        margin: 1rem 0 2rem 0;
        background: linear-gradient(to left, red, yellow, green);
        transform: scaleX(-1)
    }
    .progress-bar {
        background-color: #ddd;
    }
    body.dark-mode .form-control {
        background-color: #444444;
        color: #ECEFF1;
        border-color: #555555;
    }
    body.dark-mode .form-check-input {
        background-color: #444444;
        border-color: #555555;
    }
</style>
