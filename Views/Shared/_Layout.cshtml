@using System.Security.Claims

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ExpenseTracker</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ExpenseTracker.styles.css" asp-append-version="true" />
    <style>
        body.light-mode {
            background-color: #f2f2f2;
            color: #222222;
        }
        body.dark-mode {
            background-color: #222222;
            color: #ECEFF1;
        }
        body.dark-mode .navbar {
            background-color: #333333 !important;
        }
        body.dark-mode .navbar a, body.dark-mode .navbar span, body.dark-mode span{
            color: #ECEFF1 !important;
        }
        .btn-logout {
            color: #222222;
        }
        body.dark-mode .btn-logout {
            color: #ECEFF1;
        }
        body.dark-mode thead, body.dark-mode tbody, body.dark-mode th, body.dark-mode td {
            color: #ECEFF1;
        }
    </style>
</head>
<body class="light-mode" style="@((!Context.Request.Path.Value.Contains("Account/") && Context.Request.Path.Value != "/") ? "" : "overflow: hidden;")">
    @if (!Context.Request.Path.Value.Contains("Account/") && Context.Request.Path.Value != "/")
    {
        <header>
            <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
                <div class="container-fluid">
                    <a class="navbar-brand" asp-area="" asp-controller="Expenses" asp-action="Index">Expense Tracker</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                        <ul class="navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Expenses" asp-action="Index">Expenses</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Categories" asp-action="Index">Categories</a>
                            </li>
                        </ul>
                        <span class="navbar-text text-dark">
                            Hello @User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value
                        </span>
                        <form class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout" method="post">
                            <button type="submit" class="btn btn-link nav-link btn-logout">Logout</button>
                        </form>
                        <button id="theme-toggle" class="btn btn-secondary">Dark Mode</button>
                    </div>
                </div>
            </nav>
        </header>
    }
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @if (!Context.Request.Path.Value.Contains("Account/") && Context.Request.Path.Value != "/")
    {
        <footer class="border-top footer text-muted"> &copy; 2024 - ExpenseTracker </footer>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const theme = getCookie('theme') || 'light';
            document.body.classList.remove('light-mode', 'dark-mode');
            document.body.classList.add(`${theme}-mode`);
            document.getElementById('theme-toggle').textContent = theme === 'light' ? 'Dark Mode' : 'Light Mode';
        });

        document.getElementById('theme-toggle').addEventListener('click', function() {
            const body = document.body;
            const newTheme = body.classList.contains('light-mode') ? 'dark' : 'light';
            body.classList.toggle('light-mode');
            body.classList.toggle('dark-mode');
            this.textContent = newTheme === 'light' ? 'Dark Mode' : 'Light Mode';
            setCookie('theme', newTheme, 365);
        });

        function setCookie(name, value, days) {
            const date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            const expires = "expires=" + date.toUTCString();
            document.cookie = name + "=" + value + ";" + expires + ";path=/";
        }

        function getCookie(name) {
            const nameEQ = name + "=";
            const ca = document.cookie.split(';');
            for (let i = 0; i < ca.length; i++) {
                let c = ca[i];
                while (c.charAt(0) === ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
